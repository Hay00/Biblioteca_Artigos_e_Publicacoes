/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.acme.gui;

import br.com.acme.AcademicLibrary;
import br.com.acme.Author;
import br.com.acme.Book;
import br.com.acme.Publication;
import br.com.acme.logic.ALManager;
import java.awt.print.PrinterException;
import java.text.MessageFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author hibiscus, Vinicios, gabid
 */
public class ListBooksForm extends javax.swing.JDialog {

    private AcademicLibrary library;

    /**
     * Creates new form ListBooksForm
     */
    public ListBooksForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        library = ALManager.getInstance();

        populateTable();
    }

    /**
     * Coloca na tela todos os books.
     */
    private void populateTable() {
        jlTotal.setText(String.valueOf(library.countBooks()));
        DefaultTableModel model = (DefaultTableModel) jtBookList.getModel();
        model.setRowCount(0);

        ArrayList<Book> booksList = library.getAllBooks();

        int line = 0;
        for (Book b : booksList) {

            String authorName = "";
            for (Author aut : b.getAuthors()) {
                authorName = authorName + aut.getName();
            }
            model.addRow(new Object[]{b.getTitle(), authorName, b.getYear(), b.getVolume(), b.getLanguage(), b.getIsbn(), b.getPages()});
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jspBookList = new javax.swing.JScrollPane();
        jtBookList = new javax.swing.JTable();
        jbClose = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jlTotal = new javax.swing.JLabel();
        jbPrintBooksList = new javax.swing.JButton();
        jbRemove = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("List of Books");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Books in your library");

        jtBookList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title", "Authors", "Year", "Volume", "Language", "ISBN", "Number of Pages"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Short.class, java.lang.Byte.class, java.lang.Object.class, java.lang.Long.class, java.lang.Short.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jspBookList.setViewportView(jtBookList);

        jbClose.setText("Close");
        jbClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCloseActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Total:");

        jlTotal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jbPrintBooksList.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/jtb/printer.png"))); // NOI18N
        jbPrintBooksList.setText("Print");
        jbPrintBooksList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPrintBooksListActionPerformed(evt);
            }
        });

        jbRemove.setText("Remove Selected");
        jbRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRemoveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jlTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jbPrintBooksList, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jbRemove)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jbClose, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jspBookList, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(35, 35, 35))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(345, 345, 345))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jbPrintBooksList)
                    .addComponent(jlTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(jspBookList, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbClose)
                    .addComponent(jbRemove, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(883, 372));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jbCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCloseActionPerformed
        setVisible(false);
        dispose();
    }//GEN-LAST:event_jbCloseActionPerformed

    private void jbPrintBooksListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPrintBooksListActionPerformed
        try {
            MessageFormat title = new MessageFormat("Library Books");
            MessageFormat footer = new MessageFormat("UNIJUI - Computer Science 2018");
            jtBookList.print(JTable.PrintMode.FIT_WIDTH, title, footer);
        } catch (PrinterException ex) {

            JOptionPane.showMessageDialog(null, "An error occurred while printing the books informations. Try again  \n Error: " + ex);

        }
    }//GEN-LAST:event_jbPrintBooksListActionPerformed

    private void jbRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRemoveActionPerformed
        TableModel model = jtBookList.getModel();

        DefaultTableModel tm = (DefaultTableModel) jtBookList.getModel();
        long selectedBook = (long) model.getValueAt(jtBookList.getSelectedRow(), 5); // pega o ISBN da linha selecionada

        library.removeBook(selectedBook);
        tm.removeRow(jtBookList.getSelectedRow());
        populateTable(); // popula novamente
    }//GEN-LAST:event_jbRemoveActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton jbClose;
    private javax.swing.JButton jbPrintBooksList;
    private javax.swing.JButton jbRemove;
    private javax.swing.JLabel jlTotal;
    private javax.swing.JScrollPane jspBookList;
    private javax.swing.JTable jtBookList;
    // End of variables declaration//GEN-END:variables
}
