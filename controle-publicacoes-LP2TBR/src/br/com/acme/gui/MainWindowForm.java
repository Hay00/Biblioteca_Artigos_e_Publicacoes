package br.com.acme.gui;

import br.com.acme.AcademicLibrary;
import br.com.acme.Article;
import br.com.acme.Book;
import br.com.acme.Publication;
import br.com.acme.User;
import br.com.acme.logic.ALManager;
import br.com.acme.logic.CurrentDate;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vinicios, gabid
 */
public class MainWindowForm extends javax.swing.JFrame {

    private LoginForm loginForm = null;
    private User user;
    private AcademicLibrary library;

    /**
     * Creates new form MainWindowForm
     */
    public MainWindowForm(LoginForm loginForm, User user) {
        this.library = ALManager.getInstance();
        this.loginForm = loginForm;
        this.user = user;
        initComponents();

        // Ativa o log.
        library.log = true;
        jcbLog.setSelected(true);

        // Coloca os valores nas vari√°veis no final da tela...
        jlInfo.setText("Logged User: " + user.getLogin());
        jlLibraryName.setText("Library Name: " + library.getName());
        jlLibraryDescription.setText("Description: " + library.getDescription());
        jlDay.setText(CurrentDate.getOnlyDate());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jfcSelection = new javax.swing.JFileChooser();
        jlInfo = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        jbmbNew = new javax.swing.JButton();
        jbmbOpen = new javax.swing.JButton();
        jbmbSave = new javax.swing.JButton();
        jbmSaveAs = new javax.swing.JButton();
        jbmbCreateAccount = new javax.swing.JButton();
        jlDay = new javax.swing.JLabel();
        jlLibraryName = new javax.swing.JLabel();
        jlLibraryDescription = new javax.swing.JLabel();
        jspListPublications = new javax.swing.JScrollPane();
        jtPublicationsSearched = new javax.swing.JTable();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jtfSearchBar = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jtfSearchPublication = new javax.swing.JButton();
        jmbMenu = new javax.swing.JMenuBar();
        jmFile = new javax.swing.JMenu();
        jmiNew = new javax.swing.JMenuItem();
        jmiOpen = new javax.swing.JMenuItem();
        jmiSave = new javax.swing.JMenuItem();
        jmiSaveAs = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jmiExit = new javax.swing.JMenuItem();
        jmPublications = new javax.swing.JMenu();
        jmAdd = new javax.swing.JMenu();
        jmiAddBook = new javax.swing.JMenuItem();
        jmiAddArticle = new javax.swing.JMenuItem();
        jmList = new javax.swing.JMenu();
        jmiListBooks = new javax.swing.JMenuItem();
        jmiListArticles = new javax.swing.JMenuItem();
        jmSearch = new javax.swing.JMenu();
        jmiSearchBooks = new javax.swing.JMenuItem();
        jmiSearchArticles = new javax.swing.JMenuItem();
        jmAccounts = new javax.swing.JMenu();
        jmiCreate = new javax.swing.JMenuItem();
        jmiListAccounts = new javax.swing.JMenuItem();
        jmHelp = new javax.swing.JMenu();
        jmiSupport = new javax.swing.JMenuItem();
        jcbmiUpdate = new javax.swing.JCheckBoxMenuItem();
        jcbLog = new javax.swing.JCheckBoxMenuItem();
        jmiAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Academic Library Control System");
        setPreferredSize(new java.awt.Dimension(800, 600));

        jlInfo.setText("User:");

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jbmbNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/jtb/page_white.png"))); // NOI18N
        jbmbNew.setFocusable(false);
        jbmbNew.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbmbNew.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbmbNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbmbNewActionPerformed(evt);
            }
        });
        jToolBar1.add(jbmbNew);

        jbmbOpen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/jtb/folder.png"))); // NOI18N
        jbmbOpen.setFocusable(false);
        jbmbOpen.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbmbOpen.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbmbOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbmbOpenActionPerformed(evt);
            }
        });
        jToolBar1.add(jbmbOpen);

        jbmbSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/jtb/disk.png"))); // NOI18N
        jbmbSave.setFocusable(false);
        jbmbSave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbmbSave.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbmbSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbmbSaveActionPerformed(evt);
            }
        });
        jToolBar1.add(jbmbSave);

        jbmSaveAs.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/jtb/disk_multiple.png"))); // NOI18N
        jbmSaveAs.setFocusable(false);
        jbmSaveAs.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbmSaveAs.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbmSaveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbmSaveAsActionPerformed(evt);
            }
        });
        jToolBar1.add(jbmSaveAs);

        jbmbCreateAccount.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/jtb/user_add.png"))); // NOI18N
        jbmbCreateAccount.setFocusable(false);
        jbmbCreateAccount.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbmbCreateAccount.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbmbCreateAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbmbCreateAccountActionPerformed(evt);
            }
        });
        jToolBar1.add(jbmbCreateAccount);

        jlDay.setText("Day:");

        jlLibraryName.setText("Library");

        jlLibraryDescription.setText("Description");

        jtPublicationsSearched.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Type", "Issn/Isbn"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtPublicationsSearched.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jspListPublications.setViewportView(jtPublicationsSearched);

        jtfSearchBar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfSearchBarKeyPressed(evt);
            }
        });

        jLabel1.setText("Find Publication:");

        jtfSearchPublication.setText("Search");
        jtfSearchPublication.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfSearchPublicationActionPerformed(evt);
            }
        });

        jmFile.setText("File");

        jmiNew.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jmiNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/jmb/file/page_white.png"))); // NOI18N
        jmiNew.setText("New");
        jmiNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiNewActionPerformed(evt);
            }
        });
        jmFile.add(jmiNew);

        jmiOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jmiOpen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/jmb/file/folder.png"))); // NOI18N
        jmiOpen.setText("Open");
        jmiOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiOpenActionPerformed(evt);
            }
        });
        jmFile.add(jmiOpen);

        jmiSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jmiSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/jmb/file/disk.png"))); // NOI18N
        jmiSave.setText("Save");
        jmiSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiSaveActionPerformed(evt);
            }
        });
        jmFile.add(jmiSave);

        jmiSaveAs.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/jtb/disk_multiple.png"))); // NOI18N
        jmiSaveAs.setText("Save As..");
        jmiSaveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiSaveAsActionPerformed(evt);
            }
        });
        jmFile.add(jmiSaveAs);
        jmFile.add(jSeparator1);

        jmiExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        jmiExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/jmb/file/door_in.png"))); // NOI18N
        jmiExit.setText("Exit");
        jmiExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiExitActionPerformed(evt);
            }
        });
        jmFile.add(jmiExit);

        jmbMenu.add(jmFile);

        jmPublications.setText("Publications");

        jmAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/jmb/publications/book_add.png"))); // NOI18N
        jmAdd.setText("Add");

        jmiAddBook.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_MASK));
        jmiAddBook.setText("Book");
        jmiAddBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiAddBookActionPerformed(evt);
            }
        });
        jmAdd.add(jmiAddBook);

        jmiAddArticle.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        jmiAddArticle.setText("Article");
        jmiAddArticle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiAddArticleActionPerformed(evt);
            }
        });
        jmAdd.add(jmiAddArticle);

        jmPublications.add(jmAdd);

        jmList.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/jmb/publications/table.png"))); // NOI18N
        jmList.setText("List");

        jmiListBooks.setText("Books");
        jmiListBooks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiListBooksActionPerformed(evt);
            }
        });
        jmList.add(jmiListBooks);

        jmiListArticles.setText("Articles");
        jmiListArticles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiListArticlesActionPerformed(evt);
            }
        });
        jmList.add(jmiListArticles);

        jmPublications.add(jmList);

        jmSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/jmb/publications/search.png"))); // NOI18N
        jmSearch.setText("Advanced Search");

        jmiSearchBooks.setText("Books");
        jmiSearchBooks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiSearchBooksActionPerformed(evt);
            }
        });
        jmSearch.add(jmiSearchBooks);

        jmiSearchArticles.setText("Articles");
        jmiSearchArticles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiSearchArticlesActionPerformed(evt);
            }
        });
        jmSearch.add(jmiSearchArticles);

        jmPublications.add(jmSearch);

        jmbMenu.add(jmPublications);

        jmAccounts.setText("Accounts");

        jmiCreate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/jmb/accounts/user_add.png"))); // NOI18N
        jmiCreate.setText("Create");
        jmiCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCreateActionPerformed(evt);
            }
        });
        jmAccounts.add(jmiCreate);

        jmiListAccounts.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/jmb/accounts/table.png"))); // NOI18N
        jmiListAccounts.setText("List Accounts");
        jmiListAccounts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiListAccountsActionPerformed(evt);
            }
        });
        jmAccounts.add(jmiListAccounts);

        jmbMenu.add(jmAccounts);

        jmHelp.setText("Help");

        jmiSupport.setText("Support");
        jmiSupport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiSupportActionPerformed(evt);
            }
        });
        jmHelp.add(jmiSupport);

        jcbmiUpdate.setSelected(true);
        jcbmiUpdate.setText("Check for updates");
        jmHelp.add(jcbmiUpdate);

        jcbLog.setSelected(true);
        jcbLog.setText("Log");
        jcbLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbLogActionPerformed(evt);
            }
        });
        jmHelp.add(jcbLog);

        jmiAbout.setText("About");
        jmiAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiAboutActionPerformed(evt);
            }
        });
        jmHelp.add(jmiAbout);

        jmbMenu.add(jmHelp);

        setJMenuBar(jmbMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2)
            .addComponent(jSeparator3)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(459, 459, 459))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(66, 66, 66)
                                .addComponent(jlLibraryName, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jlLibraryDescription)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jlDay))
                            .addComponent(jspListPublications)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfSearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jtfSearchPublication)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfSearchPublication)
                    .addComponent(jtfSearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jspListPublications, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlInfo)
                    .addComponent(jlDay)
                    .addComponent(jlLibraryName)
                    .addComponent(jlLibraryDescription))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jmiSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiSaveActionPerformed
        // Salva o arquivo na localiza√ß√£o default.
        try {
            ALManager.persistLibrary(library, ("LibrarySave"));
        } catch (IOException ex) {
            if (library.log) {
                ALManager.addToLog(ex.toString());
            }
        }
        GUIMessage.inf("Library saved on the dafault localization!");
    }//GEN-LAST:event_jmiSaveActionPerformed

    private void jmiNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiNewActionPerformed
        // Cria uma nova library.
        int result = GUIMessage.question("Do you really want to create a new Library?\nThis one will not be saved!");
        if (result == JOptionPane.YES_OPTION) {
            dispose();
            NewLibraryForm nlf = new NewLibraryForm(this, rootPaneCheckingEnabled);
            loginForm.setVisible(true);
            nlf.setVisible(rootPaneCheckingEnabled);
        }
    }//GEN-LAST:event_jmiNewActionPerformed

    private void jmiOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiOpenActionPerformed
        // Carrega o arquivo que o usu√°rio selecionar.
        int result = jfcSelection.showOpenDialog(this);

        // Se o usu√°rio cancelar a busca de arquivo √© cancelado o load.
        if (result == JFileChooser.CANCEL_OPTION) {
            return;
        }

        // Carrega o arquivo selecionado.
        File file = jfcSelection.getSelectedFile();
        try {
            ALManager.loadLibrary(file.getAbsolutePath());
            library = ALManager.getInstance();
            dispose();
            loginForm.setVisible(true);
        } catch (IOException | ClassNotFoundException ex) {
            if (library.log) {
                ALManager.addToLog(ex.toString());
            }
        }
    }//GEN-LAST:event_jmiOpenActionPerformed

    private void jmiExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiExitActionPerformed
        // Fecha o programa dependendo da decis√£o do usu√°rio.
        int result = GUIMessage.question("Do you really want to Exit?");
        if (result == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_jmiExitActionPerformed

    private void jmiCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCreateActionPerformed
        // Abre o cadastro para criar uma nova AcademicLibrary.
        CreateAccountForm accountForm = new CreateAccountForm(this, rootPaneCheckingEnabled);
        accountForm.setVisible(rootPaneCheckingEnabled);
    }//GEN-LAST:event_jmiCreateActionPerformed

    private void jbmbNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbmbNewActionPerformed
        // Chama o evento do jMenuItem que abre o cadastro de uma nova AcademicLibrary.
        jmiNewActionPerformed(evt);
    }//GEN-LAST:event_jbmbNewActionPerformed

    private void jbmbOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbmbOpenActionPerformed
        // Chama o evento do jMenuItem que abre o arquivo que o usu√°rio selecionar.
        jmiOpenActionPerformed(evt);
    }//GEN-LAST:event_jbmbOpenActionPerformed

    private void jbmbSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbmbSaveActionPerformed
        // Chama o evento do jMenuItem que salva a library.
        jmiSaveActionPerformed(evt);
    }//GEN-LAST:event_jbmbSaveActionPerformed

    private void jbmbCreateAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbmbCreateAccountActionPerformed
        // Chama o evento do jMenuItem para cadastrar usu√°rios.
        jmiCreateActionPerformed(evt);
    }//GEN-LAST:event_jbmbCreateAccountActionPerformed

    private void jmiAddBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiAddBookActionPerformed
        // Abre a tela de cadastro de books.
        AddBookForm bookForm = new AddBookForm(this, rootPaneCheckingEnabled);
        bookForm.setVisible(rootPaneCheckingEnabled);
    }//GEN-LAST:event_jmiAddBookActionPerformed

    private void jmiAddArticleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiAddArticleActionPerformed
        // Abre a tela de cadastro de articles.
        AddArticleForm articleForm = new AddArticleForm(this, rootPaneCheckingEnabled);
        articleForm.setVisible(rootPaneCheckingEnabled);
    }//GEN-LAST:event_jmiAddArticleActionPerformed

    private void jmiListAccountsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiListAccountsActionPerformed
        // Abre a tela que lista os users.
        if (library.countUsers() > 0) {
            ListAccountsForm laf = new ListAccountsForm(this, rootPaneCheckingEnabled);
            laf.setVisible(rootPaneCheckingEnabled);
        } else {
            GUIMessage.inf("No users found, please register more users to see!");
        }

    }//GEN-LAST:event_jmiListAccountsActionPerformed

    private void jmiSaveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiSaveAsActionPerformed
        // Salva na localiza√ß√£o selecionada pelo o usu√°rio.
        int result = jfcSelection.showSaveDialog(this);
        if (result == JFileChooser.CANCEL_OPTION) {
            return;
        }
        File file = jfcSelection.getSelectedFile();

        try {
            ALManager.persistLibrary(library, file.getAbsolutePath());
        } catch (IOException ex) {
            if (library.log) {
                ALManager.addToLog(ex.toString());
            }
        }
        GUIMessage.inf("Library saved\n" + file.getAbsolutePath());
    }//GEN-LAST:event_jmiSaveAsActionPerformed

    private void jbmSaveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbmSaveAsActionPerformed
        jmiSaveAsActionPerformed(evt);
    }//GEN-LAST:event_jbmSaveAsActionPerformed

    private void jmiListBooksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiListBooksActionPerformed
        // Abre a tela que lista os books.
        if (library.countBooks() > 0) {
            ListBooksForm lbf = new ListBooksForm(this, rootPaneCheckingEnabled);
            lbf.setVisible(rootPaneCheckingEnabled);
        } else {
            GUIMessage.inf("No books found, please register more books to see!");
        }
    }//GEN-LAST:event_jmiListBooksActionPerformed

    private void jmiListArticlesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiListArticlesActionPerformed
        // Abre a tela que lista os articles.
        if (library.countArticles() > 0) {
            ListArticlesForm laf = new ListArticlesForm(this, rootPaneCheckingEnabled);
            laf.setVisible(rootPaneCheckingEnabled);
        } else {
            GUIMessage.inf("No articles found, please register more articles to see!");
        }
    }//GEN-LAST:event_jmiListArticlesActionPerformed

    private void jmiAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiAboutActionPerformed
        // Tela do about.
        GUIMessage.about();
    }//GEN-LAST:event_jmiAboutActionPerformed

    private void jcbLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbLogActionPerformed
        // Muda o estado do log.
        if (jcbLog.isSelected()) {
            library.log = true;
        } else {
            library.log = false;
        }
    }//GEN-LAST:event_jcbLogActionPerformed

    private void jtfSearchPublicationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfSearchPublicationActionPerformed
        // Busca uma publica√ß√£o se houver.
        if (jtfSearchBar.getText().trim().isEmpty()) {
            DefaultTableModel model = (DefaultTableModel) jtPublicationsSearched.getModel();
            model.setRowCount(0);
        } else {
            if (library.countPublications() == 0) {
                GUIMessage.error("Please create more publications to search");
            } else {
                String findThis = jtfSearchBar.getText();
                populateTable(library.findPublication(findThis));
            }
        }
    }//GEN-LAST:event_jtfSearchPublicationActionPerformed

    private void jmiSearchBooksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiSearchBooksActionPerformed
        // Abre a tela de busca de books.
        if (library.countBooks() != 0) {
            SearchBooksForm bf = new SearchBooksForm(this, rootPaneCheckingEnabled);
            bf.setVisible(rootPaneCheckingEnabled);
        } else {
            GUIMessage.inf("No books found, please register more books to see!");
        }
    }//GEN-LAST:event_jmiSearchBooksActionPerformed

    private void jmiSearchArticlesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiSearchArticlesActionPerformed
        // Abre a tela de busca de articles.
        if (library.countArticles() != 0) {
            SearchArticlesForm sf = new SearchArticlesForm(this, rootPaneCheckingEnabled);
            sf.setVisible(rootPaneCheckingEnabled);
        } else {
            GUIMessage.inf("No articles found, please register more articles to see!");
        }
    }//GEN-LAST:event_jmiSearchArticlesActionPerformed

    private void jmiSupportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiSupportActionPerformed
        // Tela do suporte.
        GUIMessage.support();
    }//GEN-LAST:event_jmiSupportActionPerformed

    private void jtfSearchBarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfSearchBarKeyPressed
        // Atalho para pesquisar usando o ENTER na jtfSearchBar.
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jtfSearchPublicationActionPerformed(null);
        }
    }//GEN-LAST:event_jtfSearchBarKeyPressed

    /**
     * Coloca as informa√ß√µes na tabela dependendo da pesquisa do usu√°rio.
     *
     * @param publicationsFound publica√ß√µes que foram encontradas.
     */
    private void populateTable(ArrayList<Publication> publicationsFound) {

        DefaultTableModel model = (DefaultTableModel) jtPublicationsSearched.getModel();
        model.setRowCount(0);

        for (Publication p : publicationsFound) {
            if (p instanceof Article) {
                Article a = (Article) p;
                model.addRow(new Object[]{a.getTitle(), "Article", a.getIssn()});
            } else if (p instanceof Book) {
                Book b = (Book) p;
                model.addRow(new Object[]{b.getTitle(), "Book", b.getIsbn()});
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindowForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindowForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindowForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindowForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton jbmSaveAs;
    private javax.swing.JButton jbmbCreateAccount;
    private javax.swing.JButton jbmbNew;
    private javax.swing.JButton jbmbOpen;
    private javax.swing.JButton jbmbSave;
    private javax.swing.JCheckBoxMenuItem jcbLog;
    private javax.swing.JCheckBoxMenuItem jcbmiUpdate;
    private javax.swing.JFileChooser jfcSelection;
    private javax.swing.JLabel jlDay;
    private javax.swing.JLabel jlInfo;
    private javax.swing.JLabel jlLibraryDescription;
    private javax.swing.JLabel jlLibraryName;
    private javax.swing.JMenu jmAccounts;
    private javax.swing.JMenu jmAdd;
    private javax.swing.JMenu jmFile;
    private javax.swing.JMenu jmHelp;
    private javax.swing.JMenu jmList;
    private javax.swing.JMenu jmPublications;
    private javax.swing.JMenu jmSearch;
    private javax.swing.JMenuBar jmbMenu;
    private javax.swing.JMenuItem jmiAbout;
    private javax.swing.JMenuItem jmiAddArticle;
    private javax.swing.JMenuItem jmiAddBook;
    private javax.swing.JMenuItem jmiCreate;
    private javax.swing.JMenuItem jmiExit;
    private javax.swing.JMenuItem jmiListAccounts;
    private javax.swing.JMenuItem jmiListArticles;
    private javax.swing.JMenuItem jmiListBooks;
    private javax.swing.JMenuItem jmiNew;
    private javax.swing.JMenuItem jmiOpen;
    private javax.swing.JMenuItem jmiSave;
    private javax.swing.JMenuItem jmiSaveAs;
    private javax.swing.JMenuItem jmiSearchArticles;
    private javax.swing.JMenuItem jmiSearchBooks;
    private javax.swing.JMenuItem jmiSupport;
    private javax.swing.JScrollPane jspListPublications;
    private javax.swing.JTable jtPublicationsSearched;
    private javax.swing.JTextField jtfSearchBar;
    private javax.swing.JButton jtfSearchPublication;
    // End of variables declaration//GEN-END:variables
}
